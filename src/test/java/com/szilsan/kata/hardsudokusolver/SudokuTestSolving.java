package com.szilsan.kata.hardsudokusolver;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;

public class SudokuTestSolving {

    @Test
    void solveEasy() {

        int[][] puzzle = {
                {0, 0, 0, 0, 6, 8, 9, 3, 5},
                {0, 0, 9, 0, 0, 0, 0, 0, 0},
                {0, 0, 3, 4, 0, 0, 1, 0, 0},
                {0, 0, 0, 9, 0, 7, 2, 0, 0},
                {0, 0, 2, 8, 0, 0, 0, 7, 1},
                {0, 8, 5, 6, 0, 0, 0, 9, 0},
                {0, 1, 0, 0, 0, 6, 3, 0, 9},
                {5, 0, 6, 3, 0, 0, 0, 1, 0},
                {2, 0, 7, 0, 0, 5, 0, 4, 6}},

                solution = {{1, 2, 4, 7, 6, 8, 9, 3, 5,},
                        {8, 7, 9, 5, 3, 1, 6, 2, 4,},
                        {6, 5, 3, 4, 2, 9, 1, 8, 7,},
                        {3, 4, 1, 9, 5, 7, 2, 6, 8,},
                        {9, 6, 2, 8, 4, 3, 5, 7, 1,},
                        {7, 8, 5, 6, 1, 2, 4, 9, 3,},
                        {4, 1, 8, 2, 7, 6, 3, 5, 9,},
                        {5, 9, 6, 3, 8, 4, 7, 1, 2,},
                        {2, 3, 7, 1, 9, 5, 8, 4, 6,}};


        assertArrayEquals(solution, new SudokuSolver(puzzle).solve());
    }

    @Test
    void solveHard2() {

        int[][] puzzle = {
                {4, 7, 0, 3, 0, 2, 0, 6, 0,},
                {0, 0, 9, 0, 0, 0, 2, 0, 0,},
                {0, 8, 0, 0, 0, 0, 7, 0, 0,},
                {0, 5, 0, 0, 1, 9, 0, 0, 0,},
                {0, 0, 0, 6, 0, 5, 0, 0, 0,},
                {0, 0, 0, 2, 8, 0, 0, 5, 0,},
                {0, 0, 3, 0, 0, 0, 0, 9, 0,},
                {0, 0, 2, 0, 0, 0, 8, 0, 0,},
                {0, 4, 0, 8, 0, 6, 0, 7, 2,}};

        int[][] solution = {
                {4, 7, 1, 3, 5, 2, 9, 6, 8},
                {5, 3, 9, 7, 6, 8, 2, 4, 1},
                {2, 8, 6, 9, 4, 1, 7, 3, 5},
                {3, 5, 8, 4, 1, 9, 6, 2, 7},
                {9, 2, 4, 6, 7, 5, 1, 8, 3},
                {6, 1, 7, 2, 8, 3, 4, 5, 9},
                {8, 6, 3, 1, 2, 7, 5, 9, 4},
                {7, 9, 2, 5, 3, 4, 8, 1, 6},
                {1, 4, 5, 8, 9, 6, 3, 7, 2},
        };


        assertArrayEquals(solution, new SudokuSolver(puzzle).solve());
    }

    @Test
    void solveEasy2() {

        int[][] puzzle = {
                {0, 0, 0, 0, 0, 4, 0, 0, 5},
                {0, 0, 7, 9, 6, 0, 0, 8, 2},
                {0, 0, 4, 8, 2, 5, 0, 0, 0},
                {0, 7, 1, 0, 9, 0, 3, 5, 0},
                {4, 8, 0, 0, 0, 0, 9, 0, 0},
                {5, 9, 0, 0, 7, 0, 0, 1, 8},
                {9, 0, 0, 6, 0, 2, 0, 4, 0},
                {0, 0, 0, 0, 4, 0, 8, 0, 1},
                {0, 0, 0, 0, 0, 0, 5, 9, 6}},

                solution = {
                        {8, 2, 9, 7, 1, 4, 6, 3, 5,},
                        {1, 5, 7, 9, 6, 3, 4, 8, 2,},
                        {3, 6, 4, 8, 2, 5, 1, 7, 9,},
                        {6, 7, 1, 2, 9, 8, 3, 5, 4,},
                        {4, 8, 2, 3, 5, 1, 9, 6, 7,},
                        {5, 9, 3, 4, 7, 6, 2, 1, 8,},
                        {9, 1, 5, 6, 8, 2, 7, 4, 3,},
                        {7, 3, 6, 5, 4, 9, 8, 2, 1,},
                        {2, 4, 8, 1, 3, 7, 5, 9, 6,}};


        assertArrayEquals(solution, new SudokuSolver(puzzle).solve());
    }

    @Test
    void solveMedium() {

        int[][] puzzle = {
                {0, 0, 3, 0, 4, 9, 0, 0, 6},
                {0, 6, 1, 8, 0, 3, 2, 0, 4},
                {9, 0, 5, 0, 6, 1, 0, 0, 8},
                {0, 9, 6, 0, 3, 0, 7, 0, 0},
                {0, 7, 0, 5, 0, 0, 9, 0, 0},
                {0, 5, 0, 0, 0, 8, 6, 2, 1},
                {0, 8, 0, 0, 0, 0, 1, 5, 0},
                {4, 0, 0, 0, 9, 0, 0, 0, 0},
                {0, 0, 9, 1, 0, 0, 4, 0, 0}},

                solution = {
                        {8, 2, 3, 7, 4, 9, 5, 1, 6,},
                        {7, 6, 1, 8, 5, 3, 2, 9, 4,},
                        {9, 4, 5, 2, 6, 1, 3, 7, 8,},
                        {1, 9, 6, 4, 3, 2, 7, 8, 5,},
                        {2, 7, 8, 5, 1, 6, 9, 4, 3,},
                        {3, 5, 4, 9, 7, 8, 6, 2, 1,},
                        {6, 8, 7, 3, 2, 4, 1, 5, 9,},
                        {4, 1, 2, 6, 9, 5, 8, 3, 7,},
                        {5, 3, 9, 1, 8, 7, 4, 6, 2,}};


        assertArrayEquals(solution, new SudokuSolver(puzzle).solve());
    }

    @Test
    void solveHard() {

        int[][] puzzle = {
                {5, 4, 1, 0, 6, 0, 0, 0, 0},
                {3, 0, 0, 0, 0, 1, 8, 0, 0},
                {7, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 2, 0, 0, 1, 0, 0, 0, 8},
                {0, 0, 0, 0, 4, 0, 9, 6, 0},
                {4, 0, 0, 0, 0, 8, 0, 0, 3},
                {0, 3, 0, 6, 0, 2, 1, 0, 0},
                {0, 0, 0, 1, 7, 0, 0, 0, 5},
                {0, 0, 0, 0, 0, 0, 0, 0, 0}},

                solution = {
                        {5, 4, 1, 8, 6, 9, 3, 2, 7,},
                        {3, 6, 9, 7, 2, 1, 8, 5, 4,},
                        {7, 8, 2, 4, 3, 5, 6, 9, 1,},
                        {9, 2, 3, 5, 1, 6, 4, 7, 8,},
                        {1, 5, 8, 3, 4, 7, 9, 6, 2,},
                        {4, 7, 6, 2, 9, 8, 5, 1, 3,},
                        {8, 3, 7, 6, 5, 2, 1, 4, 9,},
                        {6, 9, 4, 1, 7, 3, 2, 8, 5,},
                        {2, 1, 5, 9, 8, 4, 7, 3, 6,}
                };


        assertArrayEquals(solution, new SudokuSolver(puzzle).solve());
    }

    @Test
    void solveHard3() {

        int[][] puzzle = {
                {0, 4, 0, 0, 0, 0, 0, 0, 0},
                {0, 7, 3, 0, 8, 0, 4, 6, 0},
                {0, 0, 0, 0, 0, 0, 0, 3, 0},
                {0, 9, 0, 7, 0, 0, 6, 0, 0},
                {0, 0, 6, 0, 4, 0, 1, 0, 0},
                {0, 5, 0, 6, 0, 8, 0, 0, 0},
                {0, 0, 0, 4, 0, 3, 0, 5, 0},
                {0, 0, 4, 0, 1, 0, 8, 0, 0},
                {0, 0, 2, 0, 0, 5, 0, 1, 0}},

                solution = {
                        {5, 4, 1, 8, 6, 9, 3, 2, 7,},
                        {3, 6, 9, 7, 2, 1, 8, 5, 4,},
                        {7, 8, 2, 4, 3, 5, 6, 9, 1,},
                        {9, 2, 3, 5, 1, 6, 4, 7, 8,},
                        {1, 5, 8, 3, 4, 7, 9, 6, 2,},
                        {4, 7, 6, 2, 9, 8, 5, 1, 3,},
                        {8, 3, 7, 6, 5, 2, 1, 4, 9,},
                        {6, 9, 4, 1, 7, 3, 2, 8, 5,},
                        {2, 1, 5, 9, 8, 4, 7, 3, 6,}
                };

        int[][] sol = new SudokuSolver(puzzle).solve();

        assertArrayEquals(solution, sol);
    }

    @Test
    void solveHard4() {

        int[][] puzzle = {
                {5, 0, 0, 0, 0, 0, 0, 8, 0},
                {7, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 3, 0, 0, 0, 9},
                {0, 0, 0, 7, 0, 0, 2, 0, 0},
                {0, 3, 0, 0, 0, 0, 0, 0, 8},
                {4, 9, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 1, 8, 0, 9, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 2, 7, 5, 0}};

        int[][] solution = {
                {5, 4, 1, 8, 6, 9, 3, 2, 7,},
                {3, 6, 9, 7, 2, 1, 8, 5, 4,},
                {7, 8, 2, 4, 3, 5, 6, 9, 1,},
                {9, 2, 3, 5, 1, 6, 4, 7, 8,},
                {1, 5, 8, 3, 4, 7, 9, 6, 2,},
                {4, 7, 6, 2, 9, 8, 5, 1, 3,},
                {8, 3, 7, 6, 5, 2, 1, 4, 9,},
                {6, 9, 4, 1, 7, 3, 2, 8, 5,},
                {2, 1, 5, 9, 8, 4, 7, 3, 6,}
        };

        int[][] sol = new SudokuSolver(puzzle).solve();

        assertArrayEquals(solution, sol);
    }

    @Test
    void solve() {

        int[][] puzzle = {{0, 0, 6, 1, 0, 0, 0, 0, 8},
                {0, 8, 0, 0, 9, 0, 0, 3, 0},
                {2, 0, 0, 0, 0, 5, 4, 0, 0},
                {4, 0, 0, 0, 0, 1, 8, 0, 0},
                {0, 3, 0, 0, 7, 0, 0, 4, 0},
                {0, 0, 7, 9, 0, 0, 0, 0, 3},
                {0, 0, 8, 4, 0, 0, 0, 0, 6},
                {0, 2, 0, 0, 5, 0, 0, 8, 0},
                {1, 0, 0, 0, 0, 2, 5, 0, 0}},

                solution = {{3, 4, 6, 1, 2, 7, 9, 5, 8},
                        {7, 8, 5, 6, 9, 4, 1, 3, 2},
                        {2, 1, 9, 3, 8, 5, 4, 6, 7},
                        {4, 6, 2, 5, 3, 1, 8, 7, 9},
                        {9, 3, 1, 2, 7, 8, 6, 4, 5},
                        {8, 5, 7, 9, 4, 6, 2, 1, 3},
                        {5, 9, 8, 4, 1, 3, 7, 2, 6},
                        {6, 2, 4, 7, 5, 9, 3, 8, 1},
                        {1, 7, 3, 8, 6, 2, 5, 9, 4}};

        assertArrayEquals(solution, new SudokuSolver(puzzle).solve());
    }

}
